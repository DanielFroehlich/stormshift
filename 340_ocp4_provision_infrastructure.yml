---
- name: Create Virtual Network
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - cfg/secrets.yml
    - cfg/stormshift.yml

  vars:
    engine_user: admin@internal
    engine_password: "{{secret_password}}"
    engine_url: https://{{layer2_rhev_engine_fqdn}}/ovirt-engine/api
    wait_for_ip: true
    debug_vm_create: true

  tasks:
    - name: Login into RHEV
      tags: always
      ovirt_auth:
       url: "{{layer2_rhev_engine_url}}"
       username: "{{layer2_rhev_engine_user}}"
       password: "{{layer2_rhev_engine_password}}"

    - name: Create virtual network
      tags: net
      ovirt_network:
        auth: "{{ ovirt_auth }}"
        state: present
        data_center: Default
        name: "{{layer3_ocp_name}}-network"
        vm_network: true
        mtu: 1442
        external_provider: ovirt-provider-ovn

- name: Configure Layer1 DNS
  hosts: layer1
  gather_facts: false
  vars_files:
    - cfg/secrets.yml
    - cfg/stormshift.yml

  tasks:
    - name: Add DNS entries
      tags: dns
      blockinfile:
        path: /etc/named/{{ sysctx_dns_domain }}.zone
        marker: "; {mark} ANSIBLE MANAGED BLOCK {{layer3_ocp_name}}"
        block: |
          {{layer3_ocp_name}}bastion IN A {{layer3_ocp_bastion_ip}}
          {{layer3_ocp_name}}support IN A 172.16.10.5
          $ORIGIN {{layer3_ocp_name}}.stormshift.coe.muc.redhat.com.
          @       IN      NS      {{layer3_ocp_bastion_ip}}
      register: dns

    - name: Restart DNS
      tags: dns
      service:
        name: named
        enabled: yes
        state: restarted
      when: dns is changed



- name: Create Virtual Machines
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - cfg/secrets.yml
    - cfg/stormshift.yml

  vars:
    engine_user: admin@internal
    engine_password: "{{secret_password}}"
    engine_url: https://{{layer2_rhev_engine_fqdn}}/ovirt-engine/api
    wait_for_ip: true
    debug_vm_create: true

# this role actually creates the VMs:
# Checkout variable "vm" in cfg/ocp(1-5).yml, esp. "profiles" and "vms
# they define what the vm-infra role will create here:
  roles:
    - role: ovirt.vm-infra
      vars:
        wait_for_ip: false
  tags:
    - vms

- name: Configure Bastion
  hosts: "{{layer3_ocp_name}}bastion.stormshift.coe.muc.redhat.com"
  gather_facts: false
  vars_files:
    - cfg/secrets.yml
    - cfg/stormshift.yml
  tasks:
    - name: Install netcat
      tags: bastion,slow
      yum:
        name: "nmap-ncat"
        state: latest

    - name: Enable IP Forwarding
      tags: bastion,firewall
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        reload: yes

    - name: Install iptables
      tags: bastion,firewall,slow
      yum:
        name: "iptables-services"
        state: latest
      when: useFirewalld is not defined

    - name: Start iptables
      tags: bastion,firewall
      service: name=iptables enabled=yes state=started
      when: useFirewalld is not defined

#iptables -F
    - name: Flush all rules
      tags: bastion,firewall
      iptables:
        flush: true
      when: useFirewalld is not defined

#iptables -t nat -A POSTROUTING ! -d 172.16.10.0/24  -o eth0 -j SNAT --to-source 10.32.105.71
#iptables ! -d 172.16.10.0/24
    - name: Add SNAT from internal net to bastion host ip
      tags: bastion,firewall
      iptables:
        state: present
        table: nat
        chain: POSTROUTING
        destination: "!{{layer3_ocp_network_prefix}}.0/24"
        out_interface: ens2
        jump: SNAT
        to_source: "{{layer3_ocp_bastion_ip}}"
      register: iptables
      when: useFirewalld is not defined

    - name: Save iptables
      tags: bastion,firewall
      command: "service iptables save"
      when: iptables is changed and useFirewalld is not defined

# Firewalld currently not supported/used by OpenShift
# So this is all masked as useFirewalld is not defined
    - name: Install firewall
      tags: bastion,firewall, slow
      yum:
        name: "firewalld"
        state: latest
      when: useFirewalld is defined

    - name: Start firewall
      tags: bastion,firewall
      service: name=firewalld enabled=yes state=started
      when: useFirewalld is defined

    - name: add ens2 to external zone
      tags: bastion,firewall
      firewalld:
        immediate: yes
        permanent: yes
        state: enabled
        zone: external
        interface: ens2
      when: useFirewalld is defined

    - name: add ens5 to internal zone
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=internal interface=ens5
      when: useFirewalld is defined

    - name: add masquerade to external zone
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=external masquerade=yes
      when: useFirewalld is defined

    - name: add passthrough to ens2
      tags: bastion,firewall
      shell: "firewall-cmd --permanent --direct --passthrough ipv4 -t nat -I POSTROUTING -o ens2 -j MASQUERADE -s {{layer3_ocp_network_prefix}}.0/24"
      register: fwresult
      changed_when: "fwresult.stderr is not search('ALREADY_ENABLED')"
      when: useFirewalld is defined

    - name: Open Service Ports
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=internal service="{{ item}}"
      with_items:
        - tftp
        - dns
        - http
        - https
        - nfs
        - ssh
      when: useFirewalld is defined

    - name: Workaround strange not persited problem
      tags: bastion,firewall
      shell: firewall-cmd --runtime-to-permanent
      changed_when: false
      when: useFirewalld is defined


    - name: Add Domain to resolv.conf
      tags: bastion,dns
      template:
        src: templates/ocp4resolv.conf.j2
        dest: /etc/resolv.conf


    - name: Remove cloud init
      tags: bastion,slow
      yum:
        name: cloud-init
        state: absent

# TODO: Deployment breaks here with "host unreachable" - understand why and FIX
    - name: Copy SSH Keys to bastion
      tags: bastion,misc
      copy:
        src: /home/hailstorm/.ssh/{{ item}}
        mode: preserve
        dest: /root/.ssh/
      with_items:
        - id_rsa
        - id_rsa.pub
        - config

- name: Configure Support
  hosts: "{{layer3_ocp_name}}support.stormshift.coe.muc.redhat.com"
  gather_facts: false
  vars_files:
    - cfg/secrets.yml
    - cfg/stormshift.yml
  tasks:
    - name: Remove cloud init
      tags: support,slow
      yum:
        name: cloud-init
        state: absent

    - name: Install packages
      tags: support,slow
      yum:
        name:
          - bind
          - dhcp-server
          - httpd
          - nfs-utils
          - tftp-server
          - tftp
        state: latest

# -------------------------------------------------
# ----------------------- setup bind as DNS Server
    - name: Configure BIND to listen on all ports
      lineinfile:
        regexp: ".*listen-on port 53.*"
        line: "  listen-on port 53 { 127.0.0.1; 172.16.10.5; };"
        path: /etc/named.conf
      tags: support,dns

    - name: Configure BIND not to listen on ipv6
      tags: support,dns
      lineinfile:
        line: 'OPTIONS="-4"'
        path: /etc/sysconfig/named

    - name: configure BIND to answer external queries
      tags: support,dns
      lineinfile:
        line: "  allow-query     { any; };"
        regexp: ".*allow-query.*"
        path: /etc/named.conf

    - name: configure BIND to forward to stormshift dns
      tags: support,dns
      lineinfile:
        line: "  forwarders { {{layer1_host_ip_adress}};};"
        regexp: ".*forwarders.*"
        insertafter: ".*allow-query.*"
        path: /etc/named.conf

    - name: create a sensible serial for BIND zone
      tags: support,dns
      shell: date +%Y%m%d$((`date +%-H`*4+`date +%-M`/8))
      register: bind_zone_serial
      changed_when: False

    - name: create zone file
      tags: support,dns
      template:
        src: templates/ocp4bind.zone.j2
        dest: /etc/named/{{layer3_ocp_name}}.{{ sysctx_dns_domain }}.zone

    - name: add zone db to bind config
      tags: support,dns
      lineinfile:
        line: "zone \"{{layer3_ocp_name}}.{{ sysctx_dns_domain }}\" { type master; file \"/etc/named/{{layer3_ocp_name}}.{{ sysctx_dns_domain }}.zone\"; };"
        path: /etc/named.rfc1912.zones

    - name: Enable dns server
      tags: support,dns
      service:
        name: named
        enabled: yes
        state: restarted

    - name: Open Firewall for dns
      tags: support,dns
      firewalld:
       service: dns
       permanent: yes
       immediate: yes
       state: enabled

    - name: Add Domain to resolv.conf
      tags: support,dns
      template:
        src: templates/ocp4resolv.conf.j2
        dest: /etc/resolv.conf

# -------------------------------------------------
# ----------------------- setup DHCP Server

    - name: Provide dhcpd conf
      tags: support,dhcp
      template:
        src: templates/ocp4dhcpd.conf.j2
        dest: /etc/dhcp/dhcpd.conf
      register: dhcp_conf

    - name: Enable and restart dhcp server
      tags: support,dhcp
      service:
        name: dhcpd
        enabled: yes
        state: restarted
      when: dhcp_conf is changed

    - name: Open Firewall for dhcp
      tags: support,dhcp
      firewalld:
       service: dhcp
       permanent: yes
       immediate: yes
       state: enabled

# -------------------------------------------------
# ----------------------- setup httpd Server
    - name: Enable and start http server
      tags: support,http
      service:
        name: httpd
        enabled: yes
        state: started

    - name: Open Firewall for httpd
      tags: support,http
      firewalld:
       service: http
       permanent: yes
       immediate: yes
       state: enabled

# -------------------------------------------------
# ----------------------- setup nfs Server
    - name: Make directory for nfs export
      tags: support,nfs
      file:
        path: "/data/nfs/ocp"
        mode: "0755"
        state: directory

    - name: Export nfs directory
      tags: support,nfs
      lineinfile:
        path: /etc/exports
        line: '/data/nfs/ocp *(async,wdelay,rw)'
        create: yes

    - name: Enable nfs
      tags: support,nfs
      service:
        name: nfs-server
        enabled: yes
        state: started

    - name: Open Firewall for nfs
      tags: support,nfs
      firewalld:
       service: nfs
       permanent: yes
       immediate: yes
       state: enabled
